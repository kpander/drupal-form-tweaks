<?php
/**
 * @file
 * Provides configurable form tweaks by user role.
 */

define('FORM_TWEAKS_CONFIG', 'form_tweaks_config');


/**
 * Provides custom hook hook_form_tweaks_definitions().
 *
 * Provide the default form tweaks that can be made to common forms.
 * Other modules can provide this hook to supply their own tweakable form
 * settings.
 *
 * @return assoc array where 
 *   key    = a unique id to represent a specific form element to hide
 *   value  = an array of form keys which lead to the element to which we add
 *            the #access = FALSE value
 *
 *            If the array is an assoc array with the key 'css', the value will
 *            be css to add inline, rather than an addition of the #access
 *            key.
 */
function form_tweaks_form_tweaks_definitions() {
  return array(
    // Generic node edit form.
    'node_form' => array(
      'node-title'                  => array('title'),
      'node-button-preview'         => array('actions', 'preview'),

      'node-revisions-fieldset'     => array('revision_information'),
      'node-revisions-add-new'      => array('revision_information', 'revision'),
      'node-revisions-log-message'  => array('revision_information', 'log'),

      'node-options-fieldset'       => array('options'),
      'node-options-published'      => array('options', 'status'),
      'node-options-promote'        => array('options', 'promote'),
      'node-options-sticky'         => array('options', 'sticky'),

      'node-author-fieldset'        => array('author'),
      'node-author-by'              => array('author', 'name'),
      'node-author-date'            => array('author', 'date'),

      'node-path-fieldset'          => array('path'),

      'node-menu-fieldset'          => array('menu'),
      'node-menu-link-description'  => array('menu', 'link', 'description'),
      'node-menu-link-weight'       => array('menu', 'link', 'weight'),
      'node-menu-link-parent'       => array('menu', 'link', 'parent'),

      // The following options are hidden by using css. Sometimes this is a 
      // requirement, sometimes it's done so that settings can still be set
      // but the form components will be invisible.
      'node-input-filter-csshide'   => array('css' => ".filter-wrapper{display:none;}"),
      'node-edit-summary-csshide'   => array('css' => ".form-type-textarea .field-edit-link{display:none;}.text-summary-wrapper{display:none !important;}"),
      'node-menu-link-csshide'      => array('css' => ".form-item-menu-enabled{display:none;}"),
      'node-menu-title-csshide'     => array('css' => ".form-item-menu-link-title{display:none;}"),
      'node-menu-parent-csshide'     => array('css' => ".form-item-menu-parent{display:none;}"),

      'node-revisions-fieldset-csshide' => array('revision_information'),
      'node-options-fieldset-csshide'   => array('options'),
      'node-author-fieldset-csshide'    => array('author'),
      'node-path-fieldset-csshide'      => array('path'),
      'node-menu-fieldset-csshide'      => array('menu'),
    ),

    // File edit form.
    'file_entity_edit' => array(
      'file-filename'               => array('filename'),
      'file-preview'                => array('preview'),
      'file-save'                   => array('actions', 'submit'), 
      'file-delete'                 => array('actions', 'delete'), 
      'file-cancel'                 => array('actions', 'cancel'), 
      'file-destination-fieldset'   => array('destination'),
      'file-path-fieldset'          => array('path'),
      'file-user-fieldset'          => array('user'),
    ),
  );
}



/**
 * Implements hook_module_implements_alter().
 *
 * We use this to place our hook_form_alter() *after* any other module's, so
 * we have access to pretty much everything. This is similar to changing the 
 * module weight in the {system} table, but without having to do it (or relying
 * on determining an arbitrarily 'good' weight).
 */
function form_tweaks_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter') {
    $module = 'form_tweaks';
    if (isset($implementations[$module])) {
      $group = $implementations[$module];
      unset($implementations[$module]);
      $implementations[$module] = $group;
    }
  }
}


/**
 * Implements hook_form_alter().
 *
 * Process the form tweaks here. If we have form/role/element matches, hide the
 * affected form elements now.
 */
function form_tweaks_form_alter(&$form, &$form_state, $form_id) {
  $tweaks = new FormTweaks();
  $tweaks->process($form, $form_id);
}
